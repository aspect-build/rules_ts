module(
    name = "e2e_bzlmod",
    version = "0.0.0",
    compatibility_level = 1,
)

# repeated here only because we use the platforms definitions for rbe
bazel_dep(name = "aspect_rules_js", version = "1.29.2", dev_dependency = True)
bazel_dep(name = "aspect_rules_ts", version = "0.0.0", dev_dependency = True)
bazel_dep(name = "bazel_skylib", version = "1.4.1", dev_dependency = True)
bazel_dep(name = "rules_proto", version = "5.3.0-21.7", dev_dependency = True)

local_path_override(
    module_name = "aspect_rules_ts",
    path = "../..",
)

# TODO: remove before landing
archive_override(
    module_name = "aspect_bazel_lib",
    patches = ["//:version.patch"],
    strip_prefix = "bazel-lib-14f685015cb1219a9ee2c83859a5c1e79fa0ca27",
    urls = ["https://github.com/kormide/bazel-lib/archive/14f685015cb1219a9ee2c83859a5c1e79fa0ca27.zip"],
)

archive_override(
    module_name = "aspect_rules_js",
    strip_prefix = "rules_js-0085348f221540e9c1712db1ca944d2fd8ae7666",
    urls = ["https://github.com/kormide/rules_js/archive/0085348f221540e9c1712db1ca944d2fd8ae7666.zip"],
)

npm = use_extension(
    "@aspect_rules_js//npm:extensions.bzl",
    "npm",
    dev_dependency = True,
)
npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
)
use_repo(npm, "npm")

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)
rules_ts_ext.deps(
    # This keeps the TypeScript version in-sync with the editor, which is typically best.
    ts_version_from = "//:package.json",
)
use_repo(rules_ts_ext, "npm_typescript")
