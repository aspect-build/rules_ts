load("@aspect_rules_ts//ts:defs.bzl", "ts_project")

# Note, Bazel 6 starlark has lambda so maybe we can stop using partial
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load(":babel.bzl", "babel")

###
# See a more full-featured example showing swc and babel at
# https://github.com/aspect-build/bazel-examples/tree/main/ts_project_transpiler
###

# Our test fixture is a large enough file that the transpilation difference is measurable
write_file(
    name = "gen_ts",
    out = "big.ts",
    content = [
        "export const a{0}: number = {0}".format(x)
        for x in range(10000)
    ],
)

# Runs babel to transpile ts -> js
# and tsc to type-check
ts_project(
    name = "babel",
    srcs = ["big.ts"],
    declaration = True,
    out_dir = "build-babel",
    source_map = True,
    transpiler = babel,
)

# Runs babel to transpile ts -> js
# and does not produce any declaration outputs.
# `tsc` is used for type-check only, as a validation action
# (run bazel with --norun_validations to skip typechecking)
ts_project(
    name = "no-emit",
    srcs = ["big.ts"],
    no_emit = True,
    transpiler = babel,
    tsconfig = {
        "compilerOptions": {
            "noEmit": True,
        },
    },
)
