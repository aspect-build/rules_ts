// @generated by protoc-gen-es v2.2.4 with parameter "keep_empty_files=true,target=js+dts,import_extension=js"
// @generated from file examples/proto_grpc/logger.proto (package logger, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Any, Timestamp } from "@bufbuild/protobuf/wkt";
import type { SayRequest } from "../connect_node/proto/eliza_pb.js";

/**
 * Describes the file examples/proto_grpc/logger.proto.
 */
export declare const file_examples_proto_grpc_logger: GenFile;

/**
 * @generated from message logger.LogMessage
 */
export declare type LogMessage = Message<"logger.LogMessage"> & {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  /**
   * @generated from field: google.protobuf.Timestamp time = 2;
   */
  time?: Timestamp;

  /**
   * @generated from field: google.protobuf.Any details = 3;
   */
  details?: Any;

  /**
   * @generated from field: connectrpc.eliza.v1.SayRequest say_request = 4;
   */
  sayRequest?: SayRequest;
};

/**
 * Describes the message logger.LogMessage.
 * Use `create(LogMessageSchema)` to create a new message.
 */
export declare const LogMessageSchema: GenMessage<LogMessage>;

/**
 * @generated from message logger.Empty
 */
export declare type Empty = Message<"logger.Empty"> & {
};

/**
 * Describes the message logger.Empty.
 * Use `create(EmptySchema)` to create a new message.
 */
export declare const EmptySchema: GenMessage<Empty>;

/**
 * @generated from service logger.Logger
 */
export declare const Logger: GenService<{
  /**
   * @generated from rpc logger.Logger.SendLogMessage
   */
  sendLogMessage: {
    methodKind: "unary";
    input: typeof LogMessageSchema;
    output: typeof EmptySchema;
  },
}>;

