"""Shows different ways to pass source files into ts_project"""

load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("@bazel_skylib//rules:write_file.bzl", "write_file")

[
    write_file(
        name = "gen-%s-ts" % n,
        out = "%s.ts" % n,
        content = [
            "export const %s = 42" % n,
        ],
    )
    for n in [
        "a",
        "b",
        "c",
        "d",
        "e",
    ]
]

# Various ways of declaring sources
ts_project(
    name = "out-refs",
    srcs = [
        # Labels of various syntaxes to files
        "a.ts",
        ":b.ts",
        "//%s:c.ts" % package_name(),
        "@//%s:d.ts" % package_name(),
        "@aspect_rules_ts//%s:e.ts" % package_name(),

        # Label to a rule
        ":gen-a-ts",
    ],
    declaration = True,
    out_dir = "out",
    source_map = True,
    tsconfig = "tsconfig.json",
)

# Ensure all the outputs are pre-declared and in the correct locations including
# dts and .map files
build_test(
    name = "src_targets_test",
    targets = [
        "out/a.js",
        "out/a.js.map",
        "out/a.d.ts",
        "out/b.js",
        "out/b.js.map",
        "out/b.d.ts",
        "out/c.js",
        "out/c.js.map",
        "out/c.d.ts",
        "out/d.js",
        "out/d.js.map",
        "out/d.d.ts",
        "out/e.d.ts",
    ],
)

build_test(
    name = "types_targets_test",
    targets = [
        ":out-refs",
        ":out-refs_types",
    ],
)
