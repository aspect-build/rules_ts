"""Shows how https://www.typescriptlang.org/tsconfig/#resolveJsonModule can be used."""

load("@aspect_bazel_lib//lib:testing.bzl", "assert_contains")
load("@aspect_rules_js//js:defs.bzl", "js_test")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@npm//:defs.bzl", "npm_link_all_packages")

npm_link_all_packages(name = "node_modules")

ts_project(
    name = "ts",
    srcs = [
        "index.mts",
        "package.json",
    ],
    resolve_json_module = True,
    deps = [
        ":node_modules/@aspect-test/e",
    ],
)

ts_project(
    name = "ts-dict-override",
    srcs = [
        "index.mts",
        "package.json",
    ],
    extends = "tsconfig.json",
    tsconfig = {
        "compilerOptions": {
            "outDir": "ts-dict-override",
            "resolveJsonModule": True,
        },
    },
    deps = [
        ":node_modules/@aspect-test/e",
    ],
)

ts_project(
    name = "ts-dict-unspecified",
    srcs = [
        "index.mts",
        "package.json",
    ],
    extends = "tsconfig.json",
    resolve_json_module = True,
    tsconfig = {
        "compilerOptions": {
            "outDir": "ts-dict-unspecified",
        },
    },
    deps = [
        ":node_modules/@aspect-test/e",
    ],
)

assert_contains(
    name = "test",
    actual = "index.mjs",
    expected = """Hello from """,
)

js_test(
    # Test that the json is available at runtime.
    name = "ts-with-json",
    data = [":ts"],
    entry_point = "index.mjs",
)

# Test that the json is available at runtime with various ways of
# specifying resolveJsonModule in tsconfig.json.
[
    js_test(
        name = "ts-with-json-%s" % t,
        data = [":ts-%s" % t],
        entry_point = "ts-%s/index.mjs" % t,
    )
    for t in [
        "dict-override",
        "dict-unspecified",
    ]
]
