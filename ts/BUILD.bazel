load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("@bazel_skylib//rules:common_settings.bzl", "string_flag")
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")
load("//ts/private:configuration.bzl", "configuration")

bool_flag(
    name = "verbose",
    build_setting_default = False,
    visibility = ["//visibility:public"],
)

bool_flag(
    name = "supports_workers",
    build_setting_default = True,
    visibility = ["//visibility:public"],
)

# TODO(2.0): remove this
config_setting(
    name = "legacy_verbose",
    define_values = {"VERBOSE_LOGS": "1"},
)

config_setting(
    name = "verbose_flag",
    flag_values = {
        ":verbose": "true"
    }
)

config_setting(
    name = "supports_workers_flag",
    flag_values = {
        ":supports_workers": "true"
    }
)

configuration(
    name = "configuration",
    visibility = ["//visibility:public"],
    verbose = select({
        ":legacy_verbose": True,
        ":verbose_flag": True,
        "//conditions:default": False,
    }),
    supports_workers = select({
        ":supports_workers_flag": True,
        "//conditions:default": False,
    })
)


exports_files(
    glob(["*.bzl"]),
    visibility = ["//docs:__pkg__"],
)

# Users can enable with --@aspect_rules_ts//ts:skipLibCheck=always
string_flag(
    # Note: this name is chosen to be searchable when users look for "skipLibCheck" in their repo,
    # as that's the way it appears in tsconfig.json or tsc command line.
    name = "skipLibCheck",
    # TODO(2.0): change default to "unspecified"
    build_setting_default = "honor_tsconfig",
    values = [
        "always",
        "honor_tsconfig",
        "unspecified",
    ],
)

# Note, users could use a Transition to make a subgraph of their depgraph opt-in to skipLibCheck.
config_setting(
    name = "skip_lib_check.always",
    flag_values = {":skipLibCheck": "always"},
)

config_setting(
    name = "skip_lib_check.honor_tsconfig",
    flag_values = {":skipLibCheck": "honor_tsconfig"},
)

bzl_library(
    name = "defs",
    srcs = ["defs.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//ts/private/docs:ts_config",
        "//ts/private/docs:ts_project",
        "@aspect_rules_js//js:defs",
        "@bazel_skylib//lib:partial",
        "@bazel_skylib//rules:build_test",
    ],
)

bzl_library(
    name = "repositories",
    srcs = ["repositories.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//ts/private/docs:maybe",
        "//ts/private/docs:npm_repositories",
        "//ts/private/docs:versions",
        "@bazel_tools//tools/build_defs/repo:http.bzl",
        "@bazel_tools//tools/build_defs/repo:utils.bzl",
    ],
)
