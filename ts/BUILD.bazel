load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag")

exports_files(
    glob(["*.bzl"]),
    visibility = ["//docs:__pkg__"],
)

# Users can enable with --@aspect_rules_ts//ts:skipLibCheck
bool_flag(
    # Note: this name is chosen to be searchable when users look for "skipLibCheck" in their repo,
    # as that's the way it appears in tsconfig.json or tsc command line.
    name = "skipLibCheck",
    build_setting_default = False,
)

# Users can enable with --@aspect_rules_ts//ts:use_skipLibCheck_from_tsconfig
bool_flag(
    name = "use_skipLibCheck_from_tsconfig",
    build_setting_default = False,
)

# Note, users could use a Transition to make a subgraph of their depgraph opt-in to skipLibCheck.
config_setting(
    name = "skip_lib_check.always",
    # Note: check both values to ensure they are mutually exclusive, not both set.
    flag_values = {
        ":skipLibCheck": "1",
        ":use_skipLibCheck_from_tsconfig": "0",
    },
)

config_setting(
    name = "skip_lib_check.honor_tsconfig",
    # Again, check that they are mutually exclusive.
    flag_values = {
        ":skipLibCheck": "0",
        ":use_skipLibCheck_from_tsconfig": "1",
    },
)

bzl_library(
    name = "defs",
    srcs = ["defs.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//ts/private/docs:ts_config",
        "//ts/private/docs:ts_project",
        "@aspect_rules_js//js:defs",
        "@bazel_skylib//lib:partial",
        "@bazel_skylib//rules:build_test",
    ],
)

bzl_library(
    name = "repositories",
    srcs = ["repositories.bzl"],
    visibility = ["//visibility:public"],
    deps = [
        "//ts/private/docs:maybe",
        "//ts/private/docs:npm_repositories",
        "//ts/private/docs:versions",
        "@bazel_tools//tools/build_defs/repo:http.bzl",
        "@bazel_tools//tools/build_defs/repo:utils.bzl",
    ],
)
